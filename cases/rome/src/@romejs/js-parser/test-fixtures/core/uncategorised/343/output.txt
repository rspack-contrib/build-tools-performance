Program {
  corrupt: false
  diagnostics: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 12
      index: 24
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  comments: Array [
    CommentLine {
      value: ' nothing'
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 12
          index: 24
          line: 2
        }
        start: Object {
          column: 1
          index: 13
          line: 2
        }
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 11
          index: 11
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      trailingComments: Array [
        CommentLine {
          value: ' nothing'
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 12
              index: 24
              line: 2
            }
            start: Object {
              column: 1
              index: 13
              line: 2
            }
          }
        }
      ]
      expression: AssignmentExpression {
        operator: '='
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 10
            index: 10
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        left: AssignmentIdentifier {
          name: 'x'
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 1
              index: 1
              line: 1
            }
            start: Object {
              column: 0
              index: 0
              line: 1
            }
          }
        }
        right: BinaryExpression {
          operator: '>'
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 10
              index: 10
              line: 1
            }
            start: Object {
              column: 4
              index: 4
              line: 1
            }
          }
          right: NumericLiteral {
            value: 10
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 10
                index: 10
                line: 1
              }
              start: Object {
                column: 8
                index: 8
                line: 1
              }
            }
          }
          left: UpdateExpression {
            operator: '--'
            prefix: false
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 7
                index: 7
                line: 1
              }
              start: Object {
                column: 4
                index: 4
                line: 1
              }
            }
            argument: ReferenceIdentifier {
              name: 'y'
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 5
                  index: 5
                  line: 1
                }
                start: Object {
                  column: 4
                  index: 4
                  line: 1
                }
              }
            }
          }
        }
      }
    }
  ]
}