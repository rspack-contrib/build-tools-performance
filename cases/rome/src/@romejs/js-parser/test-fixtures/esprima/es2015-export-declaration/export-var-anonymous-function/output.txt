Program {
  comments: Array []
  corrupt: false
  diagnostics: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: true
  interpreter: undefined
  mtime: undefined
  sourceType: 'module'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 33
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  body: Array [
    ExportLocalDeclaration {
      exportKind: 'value'
      specifiers: undefined
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 32
          index: 32
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      declaration: VariableDeclarationStatement {
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 32
            index: 32
            line: 1
          }
          start: Object {
            column: 7
            index: 7
            line: 1
          }
        }
        declaration: VariableDeclaration {
          kind: 'var'
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 32
              index: 32
              line: 1
            }
            start: Object {
              column: 7
              index: 7
              line: 1
            }
          }
          declarations: Array [
            VariableDeclarator {
              id: BindingIdentifier {
                name: 'foo'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 14
                    index: 14
                    line: 1
                  }
                  start: Object {
                    column: 11
                    index: 11
                    line: 1
                  }
                }
              }
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 31
                  index: 31
                  line: 1
                }
                start: Object {
                  column: 11
                  index: 11
                  line: 1
                }
              }
              init: FunctionExpression {
                id: undefined
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 31
                    index: 31
                    line: 1
                  }
                  start: Object {
                    column: 17
                    index: 17
                    line: 1
                  }
                }
                body: BlockStatement {
                  body: Array []
                  directives: Array []
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 31
                      index: 31
                      line: 1
                    }
                    start: Object {
                      column: 29
                      index: 29
                      line: 1
                    }
                  }
                }
                head: FunctionHead {
                  async: false
                  generator: false
                  hasHoistedVars: false
                  params: Array []
                  predicate: undefined
                  rest: undefined
                  returnType: undefined
                  thisType: undefined
                  typeParameters: undefined
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 29
                      index: 29
                      line: 1
                    }
                    start: Object {
                      column: 17
                      index: 17
                      line: 1
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  ]
}